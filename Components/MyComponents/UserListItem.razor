@using Microsoft.AspNetCore.Identity
@using Personal_Doctor.Data
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

@code {
    [Parameter]
    public ApplicationUser User { get; set; }

    private string Role;

    protected override async Task OnInitializedAsync()
    {
        if (User != null)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

            if (authState.User.Identity.IsAuthenticated)
            {
                // Отримуємо роль з Claims
                Role = authState.User.Claims
                    .FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
            }
        }
    }
}

<NavLink href="@($"/person/{User.Id}")" class="d-flex align-items-center text-decoration-none text-dark py-2 px-3 hover-shadow rounded">
    <img src="@StaticMimeTypeGetter.GetImageSrc(User.Picture)" class="rounded-circle me-3" alt="Avatar" width="48" height="48" />
    <div>
        <div class="fw-bold">@User.Name</div>
        @if (Role == "Doctor" && User.Specialties?.Any() == true)
        {
            <div class="text-muted small">
                @string.Join(", ", User.Specialties.Select(s => s.Name))
            </div>
        }
    </div>
</NavLink>
